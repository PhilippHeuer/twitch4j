/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
        classpath("io.ratpack:ratpack-gradle:1.4.4")
    }
}

// Apply the java plugin to add support for Java
apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.ratpack.ratpack-groovy"

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Method, that gets the total amount of commits in the repository (as build number)
def gitVersion() {
	def counter = 0
	def process = "git rev-list dev --first-parent --count".execute()
	counter = process.text.toInteger()
	return counter
}

// Dependencies
dependencies {
	// Logging
    compile("ch.qos.logback:logback-classic:1.1.8")
    compile("com.jcabi:jcabi-log:0.17.2")

    // Spring Boot
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework:spring-web")

    // WebSocket Client for Twitch PubSub
    compile('com.neovisionaries:nv-websocket-client:1.31')

    // IRC Client [https://github.com/KittehOrg/KittehIRCClientLib]
    compile('org.kitteh.irc:client-lib:3.0.1');

    // JSON / YAML
    compile("com.fasterxml.jackson.core:jackson-databind:2.8.6")

	// Bucket for rate-limiting
	compile("org.isomorphism:token-bucket:1.7")

    // Expiring Map
    compile("net.jodah:expiringmap:0.5.7")

    // TypeTools
    compile("net.jodah:typetools:0.4.8")

	// Args4J - CommandLineArgumentParser
	compile("args4j:args4j:2.33")

    // Getter & Setter
    compileOnly("org.projectlombok:lombok:1.16.14")
}

/**
 * JavaDocs Generation
 */
javadoc {
	source = sourceSets.main.allJava
	classpath = sourceSets.main.compileClasspath

	// if not changed the destinationDir, the javadoc for production code is overridden.
	destinationDir = file("${buildDir}/../docs/javadoc")
}
